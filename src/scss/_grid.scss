// Generate container classes
.container{
  @include make-container();
  @include make-container-max-widths();

  &.-fluid{
    @include make-container();
  }
}

// Generate row classes
.row{
  @include make-row();

  // Alignment for every column in row
  @each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
      &.-#{$breakpoint}-top    { align-items: flex-start; }
      &.-#{$breakpoint}-center { align-items: center; }
      &.-#{$breakpoint}-bottom { align-items: flex-end; }
      &.-#{$breakpoint}-stretch { align-items: stretch; }
      &.-#{$breakpoint}-baseline { align-items: baseline; }
      &.-#{$breakpoint}-nowrap { flex-wrap: nowrap}
    }
  }
}

// Generate columns classes
.column{
  position: relative;
  // Prevent columns from collapsing when empty
  min-height: 1px;
  // Inner gutter via padding
  padding-left: ($grid-gutter-width / 2);
  padding-right: ($grid-gutter-width / 2);
  box-sizing: border-box;

  $breakpoint-counter: 0;
  @each $breakpoint in map-keys($grid-breakpoints) {
    $breakpoint-counter: ($breakpoint-counter + 1);
    @include media-breakpoint-up($breakpoint) {
      // Work around cross-media @extend (https://github.com/sass/sass/issues/1050)
      @for $i from 1 through $grid-columns {
        &.-#{$breakpoint}-#{$i} {
          @include make-col-span($i, $grid-columns);
        }
      }
      @each $modifier in (pull, push) {
        @for $i from 0 through $grid-columns {
          &.-#{$breakpoint}-#{$modifier}-#{$i} {
            @include make-col-modifier($modifier, $i, $grid-columns)
          }
        }
      }
      // `$columns - 1` because offsetting by the width of an entire row isn't possible
      @for $i from 0 through ($grid-columns - 1) {
        @if $breakpoint-counter != 1 or $i != 0 { // Avoid emitting useless .col-xs-offset-0
          &.-#{$breakpoint}-offset-#{$i} {
            @include make-col-modifier(offset, $i, $grid-columns)
          }
        }
      }
    }
  }

  // Column ordering
  @each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
      &.-#{$breakpoint}-first { order: -1; }
      &.-#{$breakpoint}-last  { order: 1; }
    }
  }

  // Alignment per column
  @each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
      &.-#{$breakpoint}-top    { align-self: flex-start; }
      &.-#{$breakpoint}-center { align-self: center; }
      &.-#{$breakpoint}-bottom { align-self: flex-end; }
      &.-#{$breakpoint}-baseline { align-self: baseline; }
      &.-#{$breakpoint}-stretch { align-self: stretch; }
    }
  }
}




